.\"
.\"	$Id: isodump.man,v 1.14 2008-01-30 22:27:09 solyga Exp $
.\"
.TH [%s PRG_NAME] [%d MANUAL_NUMBER] [%s DATE_OF_LAST_MOD] "Version [%s VERSION_NUMBER]" "[%s MANUAL_SECTION_STR]"

.SH NAME
[%s prg_name] \- extract iso9660 image from device or file
.SH SYNOPSIS
.B [%s prg_name]
.RB [ -ahHpvVx ]
.RI [ infile " [" outfile "]]"
.SH DESCRIPTION
.B [%s Prg_name]
extracts an iso9660 image from
.I infile
(defaults to
.IR [%s DEFAULT_INPUT_FILE] )
to
.I outfile
(defaults to
.IR stdout )
where the size of the image is taken from the image itself
(its primary descriptor block).
As usual, dashes indicate standard in- and output.

If
.I infile
refers to a CDROM you may read the first (data-) track only.
This is due to the fact that
.B [%s prg_name]
is based on read(2) calls only. Use
.BR cddaread (1)
for ripping tracks #>1 off a cd.

.B [%s Prg_name]
also allows for conversion of images generated by other
programs such as CloneCD and Nero which do not produce valid iso9660 images
(loop device mountable images). The input format is detected
automatically. However, since XA and NRG images cannot be detected by
reading the first block only, for these images the
.B -x
and
.B -n
flag must be specified, respectively. But relax - you are told about it.

.SH OPTIONS
.TP
.B -a
extract all data available (read until EOF)
.TP
.B -h
display help on [%s HELP_CHANNEL_STR] and
exit successfully
.TP
.B -H
write [%d HASH_MARKS] hash marks on [%s VERBOSE_CHANNEL_STR]
.TP
.B -n
assume NRG image input (skip first [%d NRG_BLOCKS] blocks)
.TP
.B -p
don't pad image (if it's too small)
.TP
.B -v
increase verbosity level on [%s VERBOSE_CHANNEL_STR]
.TP
.B -V
display version and compilation info on [%s VERSION_CHANNEL_STR] and
exit successfully
.TP
.B -x
assume XA image input (set block offset to 24)

.SH RETURN VALUE
On success, [%d RETVAL_OK] is returned. On error, a value >0 is returned.

.SH ERRORS
.TP
.B [%d RETVAL_PADDED]
image has been padded to required size
.TP
.B [%d RETVAL_BUG]
a program bug has seen the light
.TP
.B [%d RETVAL_READ_ERROR]
program exited due to a read error
.TP
.B [%d RETVAL_BROKEN]
image is broken or of unknown type
.TP
.B [%d RETVAL_ERROR]
the error is different from those explained above

.SH HINTS
.B [%s Prg_name]
tries to create images of correct size (taken from the primary descriptor
block). If it encounters an unexpected
.IR EOF ,
by default the stream is filled up with zeroes, it's 
.IR padded .
(Assumption: The image size is already known, i.e. the
primary descriptor block has been read.) However,
.B [%s prg_name]
does not correct an
.I read error
because the reason remains unknown. - Am I reading from CDROM,
harddisk or stdin??

Thus, if you have a broken CDROM and you really want to pad the image,
you must run
.B [%s prg_name]
twice, one instance for the dump and another for padding:

.B [%s prg_name] -vvH
|
.B [%s prg_name]
>
.I image_file

.SH AUTHOR
[%s MY_EMAIL_ADDRESS]
.SH SEE ALSO
.BR isoinfo (1),
.BR cddaread (1),
.BR disksize (1),
.BR mkisofs (8)
